; // Vertex Shader

; Inputs (defined as aliases for convenience)
.alias inpos v0
.alias innrm v1
.alias intex v2
.alias index v3
.alias weigh v4

.fvec projection[4], modelView[4]
.fvec Bone[80] ; 40 bones (2 fvec per bone)

; Outputs
.out outpos position
.out outtc0 texcoord0
.out outclr color
.out outview view
.out outnq normalquat
; // --------------------
; varying vec2 TexCoord0;
; varying vec3 EyeNormal;
; // --------------------

.proc main
    ; vec4 newVertex;
    ; vec4 newNormal;
    ; int index;
    ; // --------------------
    ; index=int(Index.x); // Cast to int

    
    ; newVertex = (Bone[index] * Vertex) * Weight.x;


    ; newNormal = (Bone[index] * vec4(Normal, 0.0)) * Weight.x;


    ; index=int(Index.y); //Cast to int


    ; newVertex = (Bone[index] * Vertex) * Weight.y + newVertex;

    ; newNormal = (Bone[index] * vec4(Normal, 0.0)) * Weight.y + newNormal;


    ; EyeNormal = vec3(ModelviewMatrix * newNormal);

    ; gl_Position = ProjectionModelviewMatrix * newVertex;


    ; TexCoord0 = TexCoord;
    mov outtc0, intex

    end
.end